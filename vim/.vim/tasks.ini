# build single file
[file-build]
command:c,cpp=gcc -O2 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3
command:make=make -f "$(VIM_FILENAME)"
command:java=javac -d  "$(VIM_FILEDIR)/bin" "$(VIM_FILENAME)"
command:http=:HttpShowCurl
cwd=$(VIM_FILEDIR)
output=terminal
notify=echo
save=2

# run single file
[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:make=make -f "$(VIM_FILENAME)" run
command:emake=emake -e "$(VIM_FILENAME)"
command:java=java -cp "$(VIM_FILEDIR)/bin" "$(VIM_FILENOEXT)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:bash=bash "$(VIM_FILENAME)"
command:vim=:source %
command:http=:Http
output=terminal
cwd=$(VIM_FILEDIR)
save=2

# init project with cmake
[project-init]
command=mkdir build && cd build && cmake .. -G "Unix Makefiles"
cwd=$(VIM_ROOT)
silent=1
notify=echo
save=2

# build project with make
[project-build]
command=make
cwd=$(VIM_ROOT)
silent=1
notify=echo
save=2

# run project with make
[project-run]
command=make run
cwd=$(VIM_ROOT)
output=terminal
save=2

# generate tags for project
[gen-tags]
command=ctags -R -f tags .
cwd=$(VIM_ROOT)
notify=echo
silent=1
